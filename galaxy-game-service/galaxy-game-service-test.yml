---
spring:
  application:
    name: galaxy-game-service
  profiles: test
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate.ddl-auto: create
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
    time-to-live: 600000
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: '{cipher}2462bc5b9ec8ed174d1b1ace79e64632762d4e85490f0f067f116bdec6db9892'
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
            - email
            - profile
          facebook:
            clientId: 121189305185277
            clientSecret: 42ffe5aa7379e8326387e0fe16f34132
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
            - email
            - public_profile
          github:
            clientId: d3e47fc2ddd966fa4352
            clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
            - user:email
            - read:user
        provider:
          facebook:
            authorizationUri: https://www.FACEBOOK.com/v3.0/dialog/oauth
            tokenUri: https://graph.FACEBOOK.com/v3.0/oauth/access_token
            userInfoUri: https://graph.FACEBOOK.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  url: http://localhost:8080
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
    - http://localhost:7070/oauth2/redirect
    - myandroidapp://oauth2/redirect
    - myiosapp://oauth2/redirect
amazonProperties:
  endpointUrl: https://s3.us-east-1.amazonaws.com
  accessKey: '{cipher}6489f00d1ebef59a736c23fece20119415928bc3d4f491859f9cbf5d925988851b8711de85b387874941f49dfe59c042'
  secretKey: '{cipher}6bb6639fe8d3dc35bdf4d07710ca52b5ce1a5ac03cea8e96ce5e2e6a4aeb81612fecb504414fec82b2098324c36356a41b10c23ca9a655f32d8050fa9b2ed0b9'
  bucketName: galaxygame
